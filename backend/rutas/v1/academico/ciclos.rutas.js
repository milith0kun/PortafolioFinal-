/**
 * üìÖ RUTAS DE GESTI√ìN DE CICLOS ACAD√âMICOS
 * 
 * CRUD de per√≠odos acad√©micos:
 * 
 * GET /api/v1/ciclos
 * - Listar ciclos acad√©micos
 * - Filtrar por estado y fechas
 * - Incluir estad√≠sticas b√°sicas
 * 
 * POST /api/v1/ciclos
 * - Crear nuevo ciclo acad√©mico
 * - Validar fechas coherentes
 * - Configurar estructura inicial
 * 
 * GET /api/v1/ciclos/:id
 * - Obtener detalles de ciclo espec√≠fico
 * - Incluir configuraciones y m√©tricas
 * 
 * PUT /api/v1/ciclos/:id
 * - Actualizar informaci√≥n del ciclo
 * - Validar cambios de estado
 * 
 * DELETE /api/v1/ciclos/:id
 * - Eliminar ciclo (solo si sin datos)
 * - Validar dependencias
 * 
 * PUT /api/v1/ciclos/:id/activar
 * - Activar ciclo acad√©mico
 * - Desactivar ciclo anterior
 * - Migrar datos necesarios
 */

// TODO: Solo un ciclo activo simult√°neamente
// TODO: Validaci√≥n de fechas de inicio/fin
// TODO: Estados con transiciones v√°lidas
// TODO: Migraci√≥n autom√°tica entre ciclos
// TODO: Configuraci√≥n heredable de ciclos anteriores
/**
 * üîÑ RUTAS CICLOS ACAD√âMICOS - Sistema Portafolio Docente UNSAAC
 * CRUD de ciclos acad√©micos
 */

const express = require('express');
const router = express.Router();

const ciclosController = require('../../../controladores/ciclos-academicos/gestion.controlador');
const { verificarToken, verificarRol } = require('../../../middleware/autenticacion/jwt.middleware');

// ============================================
// RUTAS P√öBLICAS (con autenticaci√≥n b√°sica)
// ============================================

/**
 * GET /api/v1/academico/ciclos
 * Listar ciclos acad√©micos
 */
router.get('/', 
    verificarToken, 
    ciclosController.listar
);

/**
 * GET /api/v1/academico/ciclos/activo
 * Obtener ciclo acad√©mico activo
 */
router.get('/activo', 
    verificarToken, 
    ciclosController.obtenerActivo
);

/**
 * GET /api/v1/academico/ciclos/estadisticas
 * Obtener estad√≠sticas de ciclos
 */
router.get('/estadisticas', 
    verificarToken, 
    verificarRol(['administrador']), 
    ciclosController.obtenerEstadisticas
);

/**
 * GET /api/v1/academico/ciclos/:id
 * Obtener ciclo por ID
 */
router.get('/:id', 
    verificarToken, 
    ciclosController.obtenerPorId
);

// ============================================
// RUTAS PROTEGIDAS - Solo administradores
// ============================================

/**
 * POST /api/v1/academico/ciclos
 * Crear nuevo ciclo acad√©mico
 */
router.post('/', 
    verificarToken, 
    verificarRol(['administrador']), 
    ciclosController.crear
);

/**
 * PUT /api/v1/academico/ciclos/:id
 * Actualizar ciclo acad√©mico
 */
router.put('/:id', 
    verificarToken, 
    verificarRol(['administrador']), 
    ciclosController.actualizar
);

/**
 * DELETE /api/v1/academico/ciclos/:id
 * Eliminar ciclo acad√©mico
 */
router.delete('/:id', 
    verificarToken, 
    verificarRol(['administrador']), 
    ciclosController.eliminar
);

/**
 * POST /api/v1/academico/ciclos/:id/duplicar
 * Duplicar ciclo acad√©mico
 */
router.post('/:id/duplicar', 
    verificarToken, 
    verificarRol(['administrador']), 
    ciclosController.duplicar
);

module.exports = router;